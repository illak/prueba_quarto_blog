[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Cosas de R",
    "section": "",
    "text": "an√°lisis\n\n\nR\n\n\nc√≥digo\n\n\nplotly\n\n\ninteractivo\n\n\n\n\n\n\n\n\n\n\n\nSep 17, 2022\n\n\nZapata Illak\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nan√°lisis\n\n\nR\n\n\nc√≥digo\n\n\n\n\n\n\n\n\n\n\n\nJul 29, 2022\n\n\nZapata Illak\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hola! me llamo Illak Zapata y soy Licenciado en Ciencias de la Computaci√≥n (a.k.a comput√≥logo). Actualmente soy analista de datos en el sector p√∫blico y mi trabajo est√° relacionado a la educaci√≥n y a la formaci√≥n docente. Me interesa mucho la docencia, los datos y sobre todo la visualizaci√≥n de los mismos como forma de comunicaci√≥n."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "An√°lisis de datos - Salarios por sector en ARG",
    "section": "",
    "text": "Este es el primer post en este blog creado con quarto y a modo de prueba voy a realizar un an√°lisis usando las bases de datos del Ministerio de Desarrollo productivo. Este an√°lisis se realiza en el contexto de un trabajo pr√°ctico para una diplomatura. La idea es revisar aspectos de manipulaci√≥n de datos, la preparaci√≥n previa de los datos o, c√≥mo yo le digo, el ‚Äúamasado‚Äù de datos, y de visualizaci√≥n, una de las formas m√°s eficientes (y divertidas) de comunicar y darle vida a los datos. Cabe se√±alar que no voy a ahondar en detalles t√©cnicos con respecto a funciones.\nPara comenzar vamos a cargar las librerias que usaremos a lo largo del documento."
  },
  {
    "objectID": "posts/post-with-code/index.html#sobre-los-datos",
    "href": "posts/post-with-code/index.html#sobre-los-datos",
    "title": "An√°lisis de datos - Salarios por sector en ARG",
    "section": "Sobre los datos",
    "text": "Sobre los datos\nLos datos corresponden al salario bruto promedio de los asalariados registrados, por sector de actividad (letra) y departamento (de acuerdo al domicilio donde vive la persona trabajadora). En este an√°lisis vamos a considerar el universo de ‚Äútotal de empresas‚Äù (sector privado junto con empresas p√∫blicas). Estos datos tienen una frecuencia mensual y van desde el 2014 hasta la actualidad.\n\nA continuaci√≥n cargamos los datos necesarios.\n\n# archivo con informaci√≥n georeferenciada de los departamentos del pa√≠s (este es un archivo otorgado y procesado para la realizaci√≥n del an√°lisis)\ndata_deptos_ARG <- read_sf(\"data/departamentos_arg.geojson\")\n\n# salario promedio por depto/partido y letra (total empresas)\nsalario_prom_depto_letra <- read_csv(\"https://cdn.produccion.gob.ar/cdn-cep/datos-por-departamento/salarios/w_mean_depto_tot_emp_letra.csv\")\n\n# salario promedio depto (total empresas)\nsalario_prom_depto <- read_csv(\"https://cdn.produccion.gob.ar/cdn-cep/datos-por-departamento/salarios/w_mean_depto_tot_emp.csv\")\n\n# diccionario deptos\ndicc_deptos <- read_csv(\"https://cdn.produccion.gob.ar/cdn-cep/datos-por-departamento/diccionario_cod_depto.csv\")\n\n# diccionario letras\ndicc_letras <- read_csv(\"https://cdn.produccion.gob.ar/cdn-cep/datos-por-departamento/diccionario_clae2.csv\")\n\nVeamos primero una gr√°fica inicial de los datos geogr√°ficos que nos proveen, deber√≠amos ver todos los departamentos del pa√≠s.\n\nggplot(data_deptos_ARG) +\n  geom_sf() +\n  theme_void()\n\n\n\n\nPerfecto!, ahora comencemos con un poco de EDA. Veamos los datos de salarios para un a√±o en particular\n\n# vamos a observar √∫nicamente el a√±o 2021\nsalarios_2021 <- salario_prom_depto %>% \n  # year es una funci√≥n de lubridate\n  filter(year(fecha)==2021)\n\nhead(salarios_2021)\n\n# A tibble: 6 x 4\n  fecha      codigo_departamento_indec id_provincia_indec  w_mean\n  <date>                         <dbl>              <dbl>   <dbl>\n1 2021-01-01                      2000                  2 121888.\n2 2021-01-01                      6007                  6  66779.\n3 2021-01-01                      6014                  6  62485.\n4 2021-01-01                      6021                  6  88491.\n5 2021-01-01                      6028                  6  77481.\n6 2021-01-01                      6035                  6  82504.\n\n# de acuerdo al marco metodol√≥gico y las deficiones de los\n# indicadores de la fuente de datos, los valores de -99 hacen\n# referencia a datos provenientes de una o dos observaciones\n# (puestos de trabajo) para preservar secreto estad√≠stico\n\n# filtramos los casos -99 y nos quedamos con el mes de diciembre\nsalarios_dic_2021 <- salarios_2021 %>% \n  filter(w_mean > 0, fecha == \"2021-12-01\")\n\n# observamos el resumen de w_mean para ver que no hayan casos raros\nsummary(salarios_dic_2021$w_mean)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  70443  112318  132916  137557  151941  357702 \n\n\nA continuaci√≥n vamos a realizar el mapa coropl√©tico de salarios de diciembre 2021 con la finalidad de responder a la pregunta:\n¬øCu√°les son los departamentos con mayor salario promedio? ü§î\n\n# primero revisamos que la clave para el join tiene el mismo tipo en ambos DF\ntypeof(data_deptos_ARG$codigo_departamento_indec)\n\n[1] \"character\"\n\ntypeof(salarios_dic_2021$codigo_departamento_indec)\n\n[1] \"double\"\n\ntypeof(data_deptos_ARG$codigo_departamento_indec)==typeof(salarios_dic_2021$codigo_departamento_indec)\n\n[1] FALSE\n\n# corregimos el tipo \ndata_deptos_ARG <- data_deptos_ARG %>% \n  mutate(codigo_departamento_indec = as.numeric(codigo_departamento_indec))\n\n# agregamos la informaci√≥n de salarios para cada depto\ndeptos_salario_dic_2021 <- data_deptos_ARG %>% \n  left_join(salarios_dic_2021)\n\n# graficamos\nggplot(deptos_salario_dic_2021) +\n  geom_sf(aes(fill = w_mean)) +\n  labs(fill = \"Salario promedio\") +\n  # usamos la paleta de colores viridis cuya principal\n  # caracter√≠stica es la accesibilidad\n  scale_fill_viridis_c(option = \"viridis\") +\n  theme_void()\n\n\n\n\nComo se puede observar en el mapa, el salario promedio es mayor en el sur del pa√≠s (o la Patagonia Argentina).\nPero‚Ä¶ ¬øesta distribuci√≥n siempre fue as√≠? ü§î\nVeamos la distribuci√≥n del salario promedio pero para el 2014\n\nsalarios_dic_2014 <- salario_prom_depto %>% \n  filter(year(fecha)==2014) %>% \n  # filtramos los casos -99 y nos quedamos con el mes de diciembre\n  filter(w_mean > 0, fecha == \"2014-12-01\")\n\n# agregamos la informaci√≥n de salarios para cada depto\ndeptos_salario_dic_2014 <- data_deptos_ARG %>% \n  left_join(salarios_dic_2014)\n\n# graficamos\nggplot(deptos_salario_dic_2014) +\n  geom_sf(aes(fill = w_mean)) +\n  labs(fill = \"Salario promedio\") +\n  scale_fill_viridis_c(option = \"viridis\") +\n  theme_void()\n\n\n\n\nPodemos observar que la distribuci√≥n es similar, observando un leve pero distinguible aumento en el salario promedio a nivel territorial en el centro y este del pa√≠s, adem√°s de un incremento en el rango de salarios m√≠nimo y m√°ximo.\nA continuaci√≥n vamos a ver la evoluci√≥n del promedio del salario en cada departamento. Para esto vamos a analizar los mismos puntos temporales de antes: diciembre del 2014 y diciembre del 2021.\n\n# preparamos los datos\ndata_salarios_2014_2021 <- salario_prom_depto %>% \n  filter(fecha == \"2014-12-01\" | fecha == \"2021-12-01\") %>% \n  mutate(anio = year(fecha)) %>% \n  select(codigo_departamento_indec, w_mean, anio) %>% \n  pivot_wider(names_from = anio, \n              values_from = w_mean, \n              names_prefix = \"anio_\") %>% \n  # filtramos departamentos que tienen valores -99 o nulos\n  filter(!is.na(codigo_departamento_indec)) %>% \n  filter(!is.na(anio_2014), anio_2014 > 0) %>% \n  filter(!is.na(anio_2021), anio_2021 > 0) %>% \n  # Calculamos el incremento en porcentaje\n  mutate(diff = (anio_2021 - anio_2014) / anio_2014 * 100)\n\n\n# agregamos la informaci√≥n de salarios para cada depto\ndeptos_salario_diff <- data_deptos_ARG %>% \n  left_join(data_salarios_2014_2021)\n\n# graficamos\nggplot(deptos_salario_diff) +\n  geom_sf(aes(fill = diff)) +\n  labs(fill = \"% aumento\") +\n  scale_fill_viridis_c(option = \"viridis\") +\n  theme_void() +\n  theme(\n    plot.title.position = \"plot\"\n  )\n\n\n\n\nEste mapa muestra la evoluci√≥n en porcentaje del crecimiento de salario en cada departamento. Una posible lectura de este mapa es que el crecimiento del salario promedio se dio de forma semi uniforme con algunas excepciones.\nEn el mapa podemos ver que hay departamentos con un aumento del salario de hasta 13 veces y en otros de hasta 5 veces.\nPasemos a la siguiente pregunta‚Ä¶\n¬øCu√°les son los 5 sectores de actividad con salarios m√°s bajos? ü§î\nPara responder a esta pregunta vamos a utilizar los datos de salario promedio por sector y letra. Nos vamos a enfocar en el a√±o 2021 y vamos a comparar estos sectores con los 2 sectores de mayor salario del mismo a√±o.\n\n# limpiamos diccionario de letras\ndicc_letras <- dicc_letras %>% \n  select(letra, letra_desc) %>% \n  unique()\n\n# filtramos el a√±o a analizar\nsalario_prom_sector_2021 <- salario_prom_depto_letra %>% \n  filter(year(fecha)==2021) %>% \n  # cruzamos con el diccionario de letras\n  left_join(dicc_letras) %>% \n  # agrupamos por sector\n  group_by(letra_desc) %>% \n  # calculamos el salario promedio por sector (promedio del a√±o)\n  summarise(salario_promedio = mean(w_mean, na.rm = TRUE)) %>% \n  arrange(salario_promedio)\n\nlast_row_idx <- salario_prom_sector_2021 %>% \n  nrow()\n\n\n\n## Loading Google fonts (https://fonts.google.com/)\nfont_add_google(\"Roboto condensed\", \"robo\")\n\n## Automatically use showtext to render text\nshowtext_auto()\n\n# graficamos los 5 sectores de actividad con salarios m√°s bajos del 2021\nggplot(salario_prom_sector_2021 %>% slice(c(1:5,last_row_idx-1, last_row_idx)), \n       aes(x = fct_reorder(letra_desc, -salario_promedio), \n           y = salario_promedio)) +\n  geom_col(aes(fill = salario_promedio < 100000)) +\n  geom_text(aes(label = scales::dollar(salario_promedio, \n                                       accuracy = .01, \n                                       big.mark = \".\", \n                                       decimal.mark = \",\"),\n                hjust = ifelse(salario_promedio < 100000,-0.1,1.1),\n                color = salario_promedio < 100000),\n           fontface = \"bold\",\n           size=7) +\n  coord_flip(clip=\"off\") +\n  scale_color_manual(values = c(\"white\",\"black\")) +\n  scale_fill_manual(values = c(\"grey70\",\"#D4C7FF\")) +\n  guides(fill=\"none\",color=\"none\") +\n  labs(x = \"none\",\n       title = \"Los 5 sectores con salario promedio m√°s bajo en el 2021\",\n       subtitle = \"En comparaci√≥n a los 2 sectores con salario promedio m√°s altos del mismo a√±o\") +\n  theme_minimal(base_family = \"robo\", base_size = 20) +\n  theme(\n    axis.text.x = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    axis.text.y = element_text(face=\"bold\"),\n    plot.title.position = \"plot\"\n  )\n\n\n\n\nA partir de esto nos surge la siguiente pregunta‚Ä¶\n¬øEsto siempre fue as√≠? ü§î\nPara esto vamos a ver los 5 sectores con menor salario a lo largo del tiempo. En este caso vamos a hacer uso de la librer√≠a gganimate que nos permite extender ggplot agregando animaci√≥n a nuestras visualizaciones. Lo m√°s interesante es que basta con agregar 5 l√≠neas de c√≥digo a lo que ven√≠amos haciendo con ggplot y luego con la funci√≥n animate agregamos los par√°metros finales como por ejemplo la duraci√≥n del gif.\n\n# filtramos los sectores a analizar\nsalario_prom_sector_evol <- salario_prom_depto_letra %>% \n  group_by(fecha, letra) %>% \n  summarise(salario_promedio = mean(w_mean, na.rm=T)) %>% \n  mutate(Rank = rank(salario_promedio)) %>% \n  filter(Rank <= 5) %>% \n  arrange(fecha, Rank) %>% \n # cruzamos con el diccionario de letras\n  left_join(dicc_letras) %>% \n  mutate(Rank = as.factor(Rank))\n\n\n# graficamos\nanim <- ggplot(salario_prom_sector_evol) +\n  geom_col(aes(x = fct_reorder(Rank, salario_promedio), \n               y = salario_promedio, \n               fill = letra_desc, \n               group = letra_desc),\n           width = 0.7) +\n  geom_text(aes(x = fct_reorder(Rank, salario_promedio), \n                y = 0,\n                label = letra_desc, group = letra_desc), \n            hjust = 0,\n            size = 3,\n            family = \"robo\") +\n  coord_flip(clip=\"off\") +\n  guides(fill = \"none\") +\n  labs(y = \"Salario Promedio\") +\n  theme_minimal() +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.text.x = element_text(family = \"robo\"),\n        axis.title.x = element_text(family = \"robo\"),\n        plot.margin = unit(c(5,10,5,0), 'lines')) +\n  # a partir de ac√° hacemos uso de gganimate\n  ggtitle('Mostrando los 5 sectores con salario promedio m√°s bajo en: {closest_state}') +\n  transition_states(fecha, state_length = 0, transition_length = 2) +\n  enter_fly(x_loc = 0, y_loc = 0) +\n  exit_fly(x_loc = 0, y_loc = 0) + \n  ease_aes('quadratic-in-out') \n\nanimate(anim, width = 700, height = 500, \n        fps = 25, duration = 40, rewind = FALSE)\n\n\n\n\nEn este gr√°fico podemos observar que de los 5 sectores con menor salario, 4 se mantienen hist√≥ricamente (entre ellos el sector de actividades relacionadas a la ense√±anza).\nVeamos c√≥mo evolucionaron los salarios en cada sector usando otra alternativa. Para esto voy a hacer una de mis visualizaciones favoritas‚Ä¶ una ‚Äúdumbbell chart‚Äù (a√∫n no encuentro una traducci√≥n que me convenza‚Ä¶ ¬øgr√°fico de mancuernas? ¬øde pesas?). El objetivo de esta visualizaci√≥n es poder comparar el crecimiento del salario promedio en cada sector desde el 2018 al 2021.\n\n# preparamos los datos\nsalario_sector_evol <- salario_prom_depto_letra %>% \n  left_join(dicc_letras) %>% \n  mutate(anio = year(fecha)) %>% \n  filter(anio %in% c(2018,2021)) %>% \n  filter(!is.na(letra_desc)) %>% \n  group_by(letra_desc, anio) %>% \n  summarise(salario_promedio = mean(w_mean, na.rm = TRUE)) %>% \n  # usamos la funci√≥n str_wrap para \"achicar\" un poco el ancho \n  # de los textos\n  mutate(letra_2 = str_wrap(letra_desc,50),\n         anio = as.factor(anio),\n         salario_promedio_K = salario_promedio / 1000)\n\n\n# para las lineas del salario promedio del a√±o\npromedio_2018_2021 <- salario_prom_depto_letra %>% \n  left_join(dicc_letras) %>% \n  mutate(anio = year(fecha)) %>% \n  filter(anio %in% c(2018,2021)) %>% \n  filter(!is.na(letra_desc)) %>% \n  group_by(anio) %>% \n  summarise(salario_promedio = mean(w_mean, na.rm = TRUE)) %>% \n  mutate(salario_promedio_K = salario_promedio / 1000) %>% \n  # generamos un vector con ambos valores\n  pull(salario_promedio_K)\n\n\n# para la dumbbell chart hacemos uso de dos geometr√≠as: \n# geom_line y geom_point\nggplot(salario_sector_evol, aes(x = salario_promedio_K, \n                                y = reorder(letra_2, salario_promedio_K),\n                                color = anio)) +\n  geom_line(aes(group = letra_2), size = 2, color = \"grey70\") +\n  # graficamos l√≠neas verticales para el promedio anual\n  geom_vline(xintercept = promedio_2018_2021, \n             alpha = .3, linetype = \"dotdash\", size = 1) +\n  geom_point(size = 5) +\n  geom_text(aes(label = scales::dollar(salario_promedio_K, suffix = \"K\", accuracy = 1),\n                hjust = ifelse(anio==2018,1.3,-0.3)),\n            alpha = .7,\n            size = 7,\n            show.legend = FALSE) +\n  scale_x_continuous(limits = c(0,220), expand = c(.2,0)) +\n  scale_color_manual(values = c(\"#8C826D\",\"#D9AF5B\")) +\n  labs(x = NULL, y = NULL, color = \"A√±o\") +\n  theme_minimal(base_family = \"robo\", base_size = 20) +\n  theme(\n    legend.position = \"top\",\n    axis.text.x = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    axis.text.y = element_text()\n  )\n\n\n\n\nDe la visualizaci√≥n podemos ver que el crecimiento fue mayor en sectores con salarios altos."
  },
  {
    "objectID": "about.html#educaci√≥n",
    "href": "about.html#educaci√≥n",
    "title": "About",
    "section": "Educaci√≥n",
    "text": "Educaci√≥n\nFaMAF - Universidad Nacional de C√≥rdoba\nC√≥rdoba, Argentina\nLicenciado en Ciencias de la Computaci√≥n | 2018\nTrabajo final: ‚ÄúVisualizaci√≥n de redes de m√∫sicos‚Äù (big data + visualizaci√≥n de datos). Pod√©s chusmear mi trabajo de tesis ac√°."
  },
  {
    "objectID": "posts/post-with-code/index.html#actualizaci√≥n",
    "href": "posts/post-with-code/index.html#actualizaci√≥n",
    "title": "An√°lisis de datos - Salarios por sector en ARG",
    "section": "Actualizaci√≥n",
    "text": "Actualizaci√≥n\nel 28 de julio se agregaron las fuentes de datos correspondientes a los salarios por clae (sectores de actividad) por lo que podemos hacer un an√°lisis m√°s detallado de las actividades. Claramente este dataset va a tener muchas m√°s filas que nuestro primer dataset el cual conten√≠a informaci√≥n por letra o sector de actividad.\nCarguemos los datos.\n\ndatos_clae <- read_csv(\"https://cdn.produccion.gob.ar/cdn-cep/datos-por-departamento/salarios/w_mean_depto_tot_emp_clae2.csv\")\n\nveamos cu√°ntas filas tiene nuestro dataframe.\n\nnrow(datos_clae)\n\n[1] 3063963\n\ndatos_clae %>% head(10)\n\n# A tibble: 10 x 5\n   fecha      codigo_departamento_indec id_provincia_indec clae2 w_mean\n   <date>                         <dbl>              <dbl> <dbl>  <dbl>\n 1 2014-01-01                      2000                  2     1 13085.\n 2 2014-01-01                      2000                  2     2 10081.\n 3 2014-01-01                      2000                  2     3 17837.\n 4 2014-01-01                      2000                  2     5 57688.\n 5 2014-01-01                      2000                  2     6 62211.\n 6 2014-01-01                      2000                  2     7 50522.\n 7 2014-01-01                      2000                  2     8 50411.\n 8 2014-01-01                      2000                  2     9 41279.\n 9 2014-01-01                      2000                  2    10 16659.\n10 2014-01-01                      2000                  2    11 23518.\n\n\nInicialmente podemos hacer uso de los IDs de sectores identificados anteriormente para el diciembre del 2021. Para esta fecha los 5 sectores con menor salario se identifican por las letras: I, P, N, L, R. Usemos esta informaci√≥n para realizar los filtros correspondientes.\n\n# volvemos a cargar el diccionario de clae/letras\n# pero esta vez no limpiamos el dataset\ndicc_clae <- read_csv(\"https://cdn.produccion.gob.ar/cdn-cep/datos-por-departamento/diccionario_clae2.csv\")\n\nsalario_prom_actividad_2021 <- datos_clae %>% \n  filter(fecha == \"2021-12-01\") %>% \n  left_join(dicc_clae) %>% \n  filter(letra %in% c(\"I\",\"P\",\"N\",\"L\",\"R\")) %>% \n  group_by(letra_desc, clae2_desc) %>% \n  summarise(salario_promedio = mean(w_mean, na.rm = T) / 1000)\n\n# visualicemos estos datos\nggplot(salario_prom_actividad_2021, \n       aes(x = fct_reorder(clae2_desc, salario_promedio), \n           y = salario_promedio,\n           fill = letra_desc)) +\n  geom_col() +\n  geom_text(aes(label = scales::dollar(salario_promedio, \n                                       suffix = \"K\",\n                                       accuracy = .1)), \n            hjust = 1.1, \n            fontface = \"bold\",\n            alpha = .6,\n            size = 8) +\n  coord_flip() +\n  ggtitle(\"Salario promedio por actividad/clae en diciembre del 2021\")+\n  labs(x = NULL, y = NULL, fill = \"Sector\") +\n  guides(x = \"none\") +\n  theme_minimal(base_size = 22) +\n  theme(\n    legend.position = \"bottom\",\n    legend.direction = \"vertical\",\n    plot.title.position = \"plot\"\n  )\n\n\n\n\nComparemos con la agrupaci√≥n por sectores (que ya hab√≠amos calculado anteriormente).\n\nsalario_prom_letra_2021 <- datos_clae %>% \n  filter(fecha == \"2021-12-01\") %>% \n  left_join(dicc_clae) %>% \n  filter(letra %in% c(\"I\",\"P\",\"N\",\"L\",\"R\")) %>% \n  group_by(letra_desc) %>% \n  summarise(salario_promedio = mean(w_mean, na.rm = T) / 1000)\n\n# visualicemos estos datos\nggplot(salario_prom_letra_2021, \n       aes(x = fct_reorder(letra_desc, salario_promedio), \n           y = salario_promedio,\n           fill = letra_desc)) +\n  geom_col() +\n  geom_text(aes(label = scales::dollar(salario_promedio, \n                                       suffix = \"K\",\n                                       accuracy = .1)), \n            hjust = 1.1, \n            fontface = \"bold\",\n            alpha = .6,\n            size = 8) +\n  coord_flip() +\n  ggtitle(\"Salario promedio por sector en diciembre del 2021\")+\n  labs(x = NULL, y = NULL) +\n  guides(x = \"none\", fill = \"none\") +\n  theme_minimal(base_size = 22) +\n  theme(\n    plot.title.position = \"plot\"\n  )\n\n\n\n\nClaramente la desagregaci√≥n de estos datos nos muestra un patr√≥n distinto.\nPr√≥ximamente seguiremos con el an√°lisis a nivel departamental de estos datos‚Ä¶."
  },
  {
    "objectID": "posts/analisis-salario-arg/index.html",
    "href": "posts/analisis-salario-arg/index.html",
    "title": "An√°lisis de datos - Salarios por sector en ARG",
    "section": "",
    "text": "Este es el primer post en este blog creado con quarto y a modo de prueba voy a realizar un an√°lisis usando las bases de datos del Ministerio de Desarrollo productivo. Este an√°lisis se realiza en el contexto de un trabajo pr√°ctico para una diplomatura. La idea es revisar aspectos de manipulaci√≥n de datos, la preparaci√≥n previa de los datos o, c√≥mo yo le digo, el ‚Äúamasado‚Äù de datos, y de visualizaci√≥n, una de las formas m√°s eficientes (y divertidas) de comunicar y darle vida a los datos. Cabe se√±alar que no voy a ahondar en detalles t√©cnicos con respecto a funciones."
  },
  {
    "objectID": "posts/analisis-salario-arg/index.html#sobre-los-datos",
    "href": "posts/analisis-salario-arg/index.html#sobre-los-datos",
    "title": "An√°lisis de datos - Salarios por sector en ARG",
    "section": "Sobre los datos",
    "text": "Sobre los datos\nLos datos corresponden al salario bruto promedio de los asalariados registrados, por sector de actividad (letra) y departamento (de acuerdo al domicilio donde vive la persona trabajadora). En este an√°lisis vamos a considerar el universo de ‚Äútotal de empresas‚Äù (sector privado junto con empresas p√∫blicas). Estos datos tienen una frecuencia mensual y van desde el 2014 hasta la actualidad.\n\nA continuaci√≥n cargamos los datos necesarios.\n\n# archivo con informaci√≥n georeferenciada de los departamentos del pa√≠s (este es un archivo otorgado y procesado para la realizaci√≥n del an√°lisis)\ndata_deptos_ARG <- read_sf(\"data/departamentos_arg.geojson\")\n\n# salario promedio por depto/partido y letra (total empresas)\nsalario_prom_depto_letra <- read_csv(\"https://cdn.produccion.gob.ar/cdn-cep/datos-por-departamento/salarios/w_mean_depto_tot_emp_letra.csv\")\n\n# salario promedio depto (total empresas)\nsalario_prom_depto <- read_csv(\"https://cdn.produccion.gob.ar/cdn-cep/datos-por-departamento/salarios/w_mean_depto_tot_emp.csv\")\n\n# diccionario deptos\ndicc_deptos <- read_csv(\"https://cdn.produccion.gob.ar/cdn-cep/datos-por-departamento/diccionario_cod_depto.csv\")\n\n# diccionario letras\ndicc_letras <- read_csv(\"https://cdn.produccion.gob.ar/cdn-cep/datos-por-departamento/diccionario_clae2.csv\")\n\nVeamos primero una gr√°fica inicial de los datos geogr√°ficos que nos proveen, deber√≠amos ver todos los departamentos del pa√≠s.\n\nggplot(data_deptos_ARG) +\n  geom_sf() +\n  theme_void()\n\n\n\n\nPerfecto!, ahora comencemos con un poco de EDA. Veamos los datos de salarios para un a√±o en particular\n\n# vamos a observar √∫nicamente el a√±o 2021\nsalarios_2021 <- salario_prom_depto %>% \n  # year es una funci√≥n de lubridate\n  filter(year(fecha)==2021)\n\nhead(salarios_2021)\n\n# A tibble: 6 x 4\n  fecha      codigo_departamento_indec id_provincia_indec  w_mean\n  <date>                         <dbl>              <dbl>   <dbl>\n1 2021-01-01                      2000                  2 121888.\n2 2021-01-01                      6007                  6  66779.\n3 2021-01-01                      6014                  6  62485.\n4 2021-01-01                      6021                  6  88491.\n5 2021-01-01                      6028                  6  77481.\n6 2021-01-01                      6035                  6  82504.\n\n# de acuerdo al marco metodol√≥gico y las deficiones de los\n# indicadores de la fuente de datos, los valores de -99 hacen\n# referencia a datos provenientes de una o dos observaciones\n# (puestos de trabajo) para preservar secreto estad√≠stico\n\n# filtramos los casos -99 y nos quedamos con el mes de diciembre\nsalarios_dic_2021 <- salarios_2021 %>% \n  filter(w_mean > 0, fecha == \"2021-12-01\")\n\n# observamos el resumen de w_mean para ver que no hayan casos raros\nsummary(salarios_dic_2021$w_mean)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  70443  112318  132916  137557  151941  357702 \n\n\nA continuaci√≥n vamos a realizar el mapa coropl√©tico de salarios de diciembre 2021 con la finalidad de responder a la pregunta:\n¬øCu√°les son los departamentos con mayor salario promedio? ü§î\n\n# primero revisamos que la clave para el join tiene el mismo tipo en ambos DF\ntypeof(data_deptos_ARG$codigo_departamento_indec)\n\n[1] \"character\"\n\ntypeof(salarios_dic_2021$codigo_departamento_indec)\n\n[1] \"double\"\n\ntypeof(data_deptos_ARG$codigo_departamento_indec)==typeof(salarios_dic_2021$codigo_departamento_indec)\n\n[1] FALSE\n\n# corregimos el tipo \ndata_deptos_ARG <- data_deptos_ARG %>% \n  mutate(codigo_departamento_indec = as.numeric(codigo_departamento_indec))\n\n# agregamos la informaci√≥n de salarios para cada depto\ndeptos_salario_dic_2021 <- data_deptos_ARG %>% \n  left_join(salarios_dic_2021)\n\n# graficamos\nggplot(deptos_salario_dic_2021) +\n  geom_sf(aes(fill = w_mean)) +\n  labs(fill = \"Salario promedio\") +\n  # usamos la paleta de colores viridis cuya principal\n  # caracter√≠stica es la accesibilidad\n  scale_fill_viridis_c(option = \"viridis\") +\n  theme_void()\n\n\n\n\nComo se puede observar en el mapa, el salario promedio es mayor en el sur del pa√≠s (o la Patagonia Argentina).\nPero‚Ä¶ ¬øesta distribuci√≥n siempre fue as√≠? ü§î\nVeamos la distribuci√≥n del salario promedio pero para el 2014\n\nsalarios_dic_2014 <- salario_prom_depto %>% \n  filter(year(fecha)==2014) %>% \n  # filtramos los casos -99 y nos quedamos con el mes de diciembre\n  filter(w_mean > 0, fecha == \"2014-12-01\")\n\n# agregamos la informaci√≥n de salarios para cada depto\ndeptos_salario_dic_2014 <- data_deptos_ARG %>% \n  left_join(salarios_dic_2014)\n\n# graficamos\nggplot(deptos_salario_dic_2014) +\n  geom_sf(aes(fill = w_mean)) +\n  labs(fill = \"Salario promedio\") +\n  scale_fill_viridis_c(option = \"viridis\") +\n  theme_void()\n\n\n\n\nPodemos observar que la distribuci√≥n es similar, observando un leve pero distinguible aumento en el salario promedio a nivel territorial en el centro y este del pa√≠s, adem√°s de un incremento en el rango de salarios m√≠nimo y m√°ximo.\nA continuaci√≥n vamos a ver la evoluci√≥n del promedio del salario en cada departamento. Para esto vamos a analizar los mismos puntos temporales de antes: diciembre del 2014 y diciembre del 2021.\n\n# preparamos los datos\ndata_salarios_2014_2021 <- salario_prom_depto %>% \n  filter(fecha == \"2014-12-01\" | fecha == \"2021-12-01\") %>% \n  mutate(anio = year(fecha)) %>% \n  select(codigo_departamento_indec, w_mean, anio) %>% \n  pivot_wider(names_from = anio, \n              values_from = w_mean, \n              names_prefix = \"anio_\") %>% \n  # filtramos departamentos que tienen valores -99 o nulos\n  filter(!is.na(codigo_departamento_indec)) %>% \n  filter(!is.na(anio_2014), anio_2014 > 0) %>% \n  filter(!is.na(anio_2021), anio_2021 > 0) %>% \n  # Calculamos el incremento en porcentaje\n  mutate(diff = (anio_2021 - anio_2014) / anio_2014 * 100)\n\n\n# agregamos la informaci√≥n de salarios para cada depto\ndeptos_salario_diff <- data_deptos_ARG %>% \n  left_join(data_salarios_2014_2021)\n\n# graficamos\nggplot(deptos_salario_diff) +\n  geom_sf(aes(fill = diff)) +\n  labs(fill = \"% aumento\") +\n  scale_fill_viridis_c(option = \"viridis\") +\n  theme_void() +\n  theme(\n    plot.title.position = \"plot\"\n  )\n\n\n\n\nEste mapa muestra la evoluci√≥n en porcentaje del crecimiento de salario en cada departamento. Una posible lectura de este mapa es que el crecimiento del salario promedio se dio de forma semi uniforme con algunas excepciones.\nEn el mapa podemos ver que hay departamentos con un aumento del salario de hasta 13 veces y en otros de hasta 5 veces.\nPasemos a la siguiente pregunta‚Ä¶\n¬øCu√°les son los 5 sectores de actividad con salarios m√°s bajos? ü§î\nPara responder a esta pregunta vamos a utilizar los datos de salario promedio por sector y letra. Nos vamos a enfocar en el a√±o 2021 y vamos a comparar estos sectores con los 2 sectores de mayor salario del mismo a√±o.\n\n# limpiamos diccionario de letras\ndicc_letras <- dicc_letras %>% \n  select(letra, letra_desc) %>% \n  unique()\n\n# filtramos el a√±o a analizar\nsalario_prom_sector_2021 <- salario_prom_depto_letra %>% \n  filter(year(fecha)==2021) %>% \n  # cruzamos con el diccionario de letras\n  left_join(dicc_letras) %>% \n  # agrupamos por sector\n  group_by(letra_desc) %>% \n  # calculamos el salario promedio por sector (promedio del a√±o)\n  summarise(salario_promedio = mean(w_mean, na.rm = TRUE)) %>% \n  arrange(salario_promedio)\n\nlast_row_idx <- salario_prom_sector_2021 %>% \n  nrow()\n\n\n\n## Loading Google fonts (https://fonts.google.com/)\nfont_add_google(\"Roboto condensed\", \"robo\")\n\n## Automatically use showtext to render text\nshowtext_auto()\n\n# graficamos los 5 sectores de actividad con salarios m√°s bajos del 2021\nggplot(salario_prom_sector_2021 %>% slice(c(1:5,last_row_idx-1, last_row_idx)), \n       aes(x = fct_reorder(letra_desc, -salario_promedio), \n           y = salario_promedio)) +\n  geom_col(aes(fill = salario_promedio < 100000)) +\n  geom_text(aes(label = scales::dollar(salario_promedio, \n                                       accuracy = .01, \n                                       big.mark = \".\", \n                                       decimal.mark = \",\"),\n                hjust = ifelse(salario_promedio < 100000,-0.1,1.1),\n                color = salario_promedio < 100000),\n           fontface = \"bold\",\n           size=7) +\n  coord_flip(clip=\"off\") +\n  scale_color_manual(values = c(\"white\",\"black\")) +\n  scale_fill_manual(values = c(\"grey70\",\"#D4C7FF\")) +\n  guides(fill=\"none\",color=\"none\") +\n  labs(x = \"none\",\n       title = \"Los 5 sectores con salario promedio m√°s bajo en el 2021\",\n       subtitle = \"En comparaci√≥n a los 2 sectores con salario promedio m√°s altos del mismo a√±o\") +\n  theme_minimal(base_family = \"robo\", base_size = 20) +\n  theme(\n    axis.text.x = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    axis.text.y = element_text(face=\"bold\"),\n    plot.title.position = \"plot\"\n  )\n\n\n\n\nA partir de esto nos surge la siguiente pregunta‚Ä¶\n¬øEsto siempre fue as√≠? ü§î\nPara esto vamos a ver los 5 sectores con menor salario a lo largo del tiempo. En este caso vamos a hacer uso de la librer√≠a gganimate que nos permite extender ggplot agregando animaci√≥n a nuestras visualizaciones. Lo m√°s interesante es que basta con agregar 5 l√≠neas de c√≥digo a lo que ven√≠amos haciendo con ggplot y luego con la funci√≥n animate agregamos los par√°metros finales como por ejemplo la duraci√≥n del gif.\n\n# filtramos los sectores a analizar\nsalario_prom_sector_evol <- salario_prom_depto_letra %>% \n  group_by(fecha, letra) %>% \n  summarise(salario_promedio = mean(w_mean, na.rm=T)) %>% \n  mutate(Rank = rank(salario_promedio)) %>% \n  filter(Rank <= 5) %>% \n  arrange(fecha, Rank) %>% \n # cruzamos con el diccionario de letras\n  left_join(dicc_letras) %>% \n  mutate(Rank = as.factor(Rank))\n\n\n# graficamos\nanim <- ggplot(salario_prom_sector_evol) +\n  geom_col(aes(x = fct_reorder(Rank, salario_promedio), \n               y = salario_promedio, \n               fill = letra_desc, \n               group = letra_desc),\n           width = 0.7) +\n  geom_text(aes(x = fct_reorder(Rank, salario_promedio), \n                y = 0,\n                label = letra_desc, group = letra_desc), \n            hjust = 0,\n            size = 3,\n            family = \"robo\") +\n  coord_flip(clip=\"off\") +\n  guides(fill = \"none\") +\n  labs(y = \"Salario Promedio\") +\n  theme_minimal() +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.text.x = element_text(family = \"robo\"),\n        axis.title.x = element_text(family = \"robo\"),\n        plot.margin = unit(c(5,10,5,0), 'lines')) +\n  # a partir de ac√° hacemos uso de gganimate\n  ggtitle('Mostrando los 5 sectores con salario promedio m√°s bajo en: {closest_state}') +\n  transition_states(fecha, state_length = 0, transition_length = 2) +\n  enter_fly(x_loc = 0, y_loc = 0) +\n  exit_fly(x_loc = 0, y_loc = 0) + \n  ease_aes('quadratic-in-out') \n\nanimate(anim, width = 700, height = 500, \n        fps = 25, duration = 40, rewind = FALSE)\n\n\n\n\nEn este gr√°fico podemos observar que de los 5 sectores con menor salario, 4 se mantienen hist√≥ricamente (entre ellos el sector de actividades relacionadas a la ense√±anza).\nVeamos c√≥mo evolucionaron los salarios en cada sector usando otra alternativa. Para esto voy a hacer una de mis visualizaciones favoritas‚Ä¶ una ‚Äúdumbbell chart‚Äù (a√∫n no encuentro una traducci√≥n que me convenza‚Ä¶ ¬øgr√°fico de mancuernas? ¬øde pesas?). El objetivo de esta visualizaci√≥n es poder comparar el crecimiento del salario promedio en cada sector desde el 2018 al 2021.\n\n# preparamos los datos\nsalario_sector_evol <- salario_prom_depto_letra %>% \n  left_join(dicc_letras) %>% \n  mutate(anio = year(fecha)) %>% \n  filter(anio %in% c(2018,2021)) %>% \n  filter(!is.na(letra_desc)) %>% \n  group_by(letra_desc, anio) %>% \n  summarise(salario_promedio = mean(w_mean, na.rm = TRUE)) %>% \n  # usamos la funci√≥n str_wrap para \"achicar\" un poco el ancho \n  # de los textos\n  mutate(letra_2 = str_wrap(letra_desc,50),\n         anio = as.factor(anio),\n         salario_promedio_K = salario_promedio / 1000)\n\n\n# para las lineas del salario promedio del a√±o\npromedio_2018_2021 <- salario_prom_depto_letra %>% \n  left_join(dicc_letras) %>% \n  mutate(anio = year(fecha)) %>% \n  filter(anio %in% c(2018,2021)) %>% \n  filter(!is.na(letra_desc)) %>% \n  group_by(anio) %>% \n  summarise(salario_promedio = mean(w_mean, na.rm = TRUE)) %>% \n  mutate(salario_promedio_K = salario_promedio / 1000) %>% \n  # generamos un vector con ambos valores\n  pull(salario_promedio_K)\n\n\n# para la dumbbell chart hacemos uso de dos geometr√≠as: \n# geom_line y geom_point\nggplot(salario_sector_evol, aes(x = salario_promedio_K, \n                                y = reorder(letra_2, salario_promedio_K),\n                                color = anio)) +\n  geom_line(aes(group = letra_2), size = 2, color = \"grey70\") +\n  # graficamos l√≠neas verticales para el promedio anual\n  geom_vline(xintercept = promedio_2018_2021, \n             alpha = .3, linetype = \"dotdash\", size = 1) +\n  geom_point(size = 5) +\n  geom_text(aes(label = scales::dollar(salario_promedio_K, suffix = \"K\", accuracy = 1),\n                hjust = ifelse(anio==2018,1.3,-0.3)),\n            alpha = .7,\n            size = 7,\n            show.legend = FALSE) +\n  scale_x_continuous(limits = c(0,220), expand = c(.2,0)) +\n  scale_color_manual(values = c(\"#8C826D\",\"#D9AF5B\")) +\n  labs(x = NULL, y = NULL, color = \"A√±o\") +\n  theme_minimal(base_family = \"robo\", base_size = 20) +\n  theme(\n    legend.position = \"top\",\n    axis.text.x = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    axis.text.y = element_text()\n  )\n\n\n\n\nDe la visualizaci√≥n podemos ver que el crecimiento fue mayor en sectores con salarios altos."
  },
  {
    "objectID": "posts/analisis-salario-arg/index.html#actualizaci√≥n",
    "href": "posts/analisis-salario-arg/index.html#actualizaci√≥n",
    "title": "An√°lisis de datos - Salarios por sector en ARG",
    "section": "Actualizaci√≥n",
    "text": "Actualizaci√≥n\nel 28 de julio se agregaron las fuentes de datos correspondientes a los salarios por clae (sectores de actividad) por lo que podemos hacer un an√°lisis m√°s detallado de las actividades. Claramente este dataset va a tener muchas m√°s filas que nuestro primer dataset el cual conten√≠a informaci√≥n por letra o sector de actividad.\nCarguemos los datos.\n\ndatos_clae <- read_csv(\"https://cdn.produccion.gob.ar/cdn-cep/datos-por-departamento/salarios/w_mean_depto_tot_emp_clae2.csv\")\n\nveamos cu√°ntas filas tiene nuestro dataframe.\n\nnrow(datos_clae)\n\n[1] 3063963\n\ndatos_clae %>% head(10)\n\n# A tibble: 10 √ó 5\n   fecha      codigo_departamento_indec id_provincia_indec clae2 w_mean\n   <date>                         <dbl>              <dbl> <dbl>  <dbl>\n 1 2014-01-01                      2000                  2     1 13085.\n 2 2014-01-01                      2000                  2     2 10081.\n 3 2014-01-01                      2000                  2     3 17837.\n 4 2014-01-01                      2000                  2     5 57688.\n 5 2014-01-01                      2000                  2     6 62211.\n 6 2014-01-01                      2000                  2     7 50522.\n 7 2014-01-01                      2000                  2     8 50411.\n 8 2014-01-01                      2000                  2     9 41279.\n 9 2014-01-01                      2000                  2    10 16659.\n10 2014-01-01                      2000                  2    11 23518.\n\n\nInicialmente podemos hacer uso de los IDs de sectores identificados anteriormente para el diciembre del 2021. Para esta fecha los 5 sectores con menor salario se identifican por las letras: I, P, N, L, R. Usemos esta informaci√≥n para realizar los filtros correspondientes.\n\n# volvemos a cargar el diccionario de clae/letras\n# pero esta vez no limpiamos el dataset\ndicc_clae <- read_csv(\"https://cdn.produccion.gob.ar/cdn-cep/datos-por-departamento/diccionario_clae2.csv\")\n\nsalario_prom_actividad_2021 <- datos_clae %>% \n  filter(fecha == \"2021-12-01\") %>% \n  left_join(dicc_clae) %>% \n  filter(letra %in% c(\"I\",\"P\",\"N\",\"L\",\"R\")) %>% \n  group_by(letra_desc, clae2_desc) %>% \n  summarise(salario_promedio = mean(w_mean, na.rm = T) / 1000)\n\n# visualicemos estos datos\nggplot(salario_prom_actividad_2021, \n       aes(x = fct_reorder(clae2_desc, salario_promedio), \n           y = salario_promedio,\n           fill = letra_desc)) +\n  geom_col() +\n  geom_text(aes(label = scales::dollar(salario_promedio, \n                                       suffix = \"K\",\n                                       accuracy = .1)), \n            hjust = 1.1, \n            fontface = \"bold\",\n            alpha = .6,\n            size = 8) +\n  scale_fill_brewer(palette = \"Set2\") +\n  coord_flip() +\n  ggtitle(\"Salario promedio por actividad/clae en diciembre del 2021\")+\n  labs(x = NULL, y = NULL, fill = \"Sector\") +\n  guides(x = \"none\") +\n  theme_minimal(base_size = 22) +\n  theme(\n    legend.position = \"bottom\",\n    legend.direction = \"vertical\",\n    plot.title.position = \"plot\"\n  )\n\n\n\n\nComparemos con la agrupaci√≥n por sectores (que ya hab√≠amos calculado anteriormente).\n\nsalario_prom_letra_2021 <- datos_clae %>% \n  filter(fecha == \"2021-12-01\") %>% \n  left_join(dicc_clae) %>% \n  filter(letra %in% c(\"I\",\"P\",\"N\",\"L\",\"R\")) %>% \n  group_by(letra_desc) %>% \n  summarise(salario_promedio = mean(w_mean, na.rm = T) / 1000)\n\n# visualicemos estos datos\nggplot(salario_prom_letra_2021, \n       aes(x = fct_reorder(letra_desc, salario_promedio), \n           y = salario_promedio,\n           fill = letra_desc)) +\n  geom_col() +\n  geom_text(aes(label = scales::dollar(salario_promedio, \n                                       suffix = \"K\",\n                                       accuracy = .1)), \n            hjust = 1.1, \n            fontface = \"bold\",\n            alpha = .6,\n            size = 8) +\n  scale_fill_brewer(palette = \"Set2\") +\n  coord_flip() +\n  ggtitle(\"Salario promedio por sector en diciembre del 2021\")+\n  labs(x = NULL, y = NULL) +\n  guides(x = \"none\", fill = \"none\") +\n  theme_minimal(base_size = 22) +\n  theme(\n    plot.title.position = \"plot\"\n  )\n\n\n\n\nClaramente la desagregaci√≥n de estos datos nos muestra un patr√≥n distinto.\nPr√≥ximamente seguiremos con el an√°lisis a nivel departamental de estos datos‚Ä¶."
  },
  {
    "objectID": "posts/analisis-salario-arg/index.html#eda",
    "href": "posts/analisis-salario-arg/index.html#eda",
    "title": "An√°lisis de datos - Salarios por sector en ARG",
    "section": "EDA",
    "text": "EDA\nPerfecto!, ahora comencemos con un poco de EDA (Exploratory Data Analysis o An√°lisis Exploratorio de los Datos). Veamos los datos de salarios para un a√±o en particular\n\n# vamos a observar √∫nicamente el a√±o 2021\nsalarios_2021 <- salario_prom_depto %>% \n  # year es una funci√≥n de lubridate\n  filter(year(fecha)==2021)\n\nhead(salarios_2021)\n\n# A tibble: 6 √ó 4\n  fecha      codigo_departamento_indec id_provincia_indec  w_mean\n  <date>                         <dbl>              <dbl>   <dbl>\n1 2021-01-01                      2000                  2 121888.\n2 2021-01-01                      6007                  6  66779.\n3 2021-01-01                      6014                  6  62485.\n4 2021-01-01                      6021                  6  88491.\n5 2021-01-01                      6028                  6  77481.\n6 2021-01-01                      6035                  6  82504.\n\n# de acuerdo al marco metodol√≥gico y las deficiones de los\n# indicadores de la fuente de datos, los valores de -99 hacen\n# referencia a datos provenientes de una o dos observaciones\n# (puestos de trabajo) para preservar secreto estad√≠stico\n\n# filtramos los casos -99 y nos quedamos con el mes de diciembre\nsalarios_dic_2021 <- salarios_2021 %>% \n  filter(w_mean > 0, fecha == \"2021-12-01\")\n\n# observamos el resumen de w_mean para ver que no hayan casos raros\nsummary(salarios_dic_2021$w_mean)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  70443  112318  132916  137556  151941  357702 \n\n# comparemos los datasets en cuanto a departamentos\ndf1 <- salario_prom_depto %>% \n  select(codigo_departamento_indec, id_provincia_indec)\n\ndf2 <- data_deptos_ARG %>% \n  select(codigo_departamento_indec, codpcia) %>% \n  mutate(\n    codigo_departamento_indec = as.numeric(codigo_departamento_indec),\n    codpcia = as.numeric(codpcia)) %>% \n  rename(id_provincia_indec = codpcia) %>% \n  st_drop_geometry()\n\n# ¬øQu√© departamentos est√°n en la base de datos de salarios pero no\n# en la de departamentos?\ndiferencia <- setdiff(df1, df2)\ndiferencia %>% \n  left_join(dicc_deptos)\n\n# A tibble: 4 √ó 4\n  codigo_departamento_indec id_provincia_indec nombre_departamento_indec nombr‚Ä¶¬π\n                      <dbl>              <dbl> <chr>                     <chr>  \n1                      2000                  2 CABA                      CABA   \n2                     94007                 94 R√≠o Grande/Tolhuin        Tierra‚Ä¶\n3                     94014                 94 Ushuaia                   Tierra‚Ä¶\n4                        NA                 NA <NA>                      <NA>   \n# ‚Ä¶ with abbreviated variable name ¬π‚Äãnombre_provincia_indec\n\n# Particularmente nos interesa que CABA est√© icluida en el mapa\n# por lo que vamos a corregir esto. Veamos si efectivamente no aparece CABA en nuestro dataset de departamentos.\ndf2 %>% \n  left_join(dicc_deptos, by = \"id_provincia_indec\") %>% \n  filter(id_provincia_indec == 2)\n\n# A tibble: 15 √ó 5\n   codigo_departamento_indec.x id_provincia_indec codigo_depar‚Ä¶¬π nombr‚Ä¶¬≤ nombr‚Ä¶¬≥\n                         <dbl>              <dbl>          <dbl> <chr>   <chr>  \n 1                        2001                  2           2000 CABA    CABA   \n 2                        2002                  2           2000 CABA    CABA   \n 3                        2003                  2           2000 CABA    CABA   \n 4                        2004                  2           2000 CABA    CABA   \n 5                        2005                  2           2000 CABA    CABA   \n 6                        2006                  2           2000 CABA    CABA   \n 7                        2007                  2           2000 CABA    CABA   \n 8                        2008                  2           2000 CABA    CABA   \n 9                        2009                  2           2000 CABA    CABA   \n10                        2010                  2           2000 CABA    CABA   \n11                        2011                  2           2000 CABA    CABA   \n12                        2012                  2           2000 CABA    CABA   \n13                        2013                  2           2000 CABA    CABA   \n14                        2014                  2           2000 CABA    CABA   \n15                        2015                  2           2000 CABA    CABA   \n# ‚Ä¶ with abbreviated variable names ¬π‚Äãcodigo_departamento_indec.y,\n#   ¬≤‚Äãnombre_departamento_indec, ¬≥‚Äãnombre_provincia_indec\n\n# Podemos ver que s√≠ aparece pero los c√≥digos de departamento\n# hacen referencia a las comunas de CABA. \n# Estos c√≥digos no figuran en nuestro dataset de salarios. \n# En el dataset de salarios tenemos el id 2000 que hace \n# referencia a CABA.\n# Entonces combinemos los pol√≠gonos de las comunas en un\n# √∫nico pol√≠gono para CABA\n\ncaba_fix <- data_deptos_ARG %>%\n  select(departamen, provincia, geometry, codigo_departamento_indec) %>%\n  group_by(provincia) %>%\n  filter(provincia == \"Ciudad Aut√≥noma de Buenos Aires\") %>%\n  summarize(geometry = st_union(geometry),\n            codigo_departamento_indec = \"02000\") %>%\n  ungroup() %>% \n  mutate(geometry = st_combine(geometry))\n\n# veamos si efectivamente se unificaron las comunas\nggplot(caba_fix) +\n  geom_sf()\n\n\n\n# perfecto! ahora procedamos a corregir nuestro dataset de\n# departamentos\nsin_CABA <- filter(data_deptos_ARG, provincia != \"Ciudad Aut√≥noma de Buenos Aires\")\n\n# el \"nuevo\" dataset pero con id 2000 para CABA\ndata_deptos_ARG <- sin_CABA %>%\n  bind_rows(caba_fix) \n\nglimpse(data_deptos_ARG %>% filter(codigo_departamento_indec==\"02000\"))\n\nRows: 1\nColumns: 12\n$ link                      <chr> NA\n$ codpcia                   <chr> NA\n$ departamen                <chr> NA\n$ provincia                 <chr> \"Ciudad Aut√≥noma de Buenos Aires\"\n$ mujeres                   <chr> NA\n$ varones                   <chr> NA\n$ personas                  <chr> NA\n$ hogares                   <chr> NA\n$ viv_part                  <chr> NA\n$ viv_part_h                <chr> NA\n$ codigo_departamento_indec <chr> \"02000\"\n$ geometry                  <MULTIPOLYGON [¬∞]> MULTIPOLYGON (((-58.39102 -..."
  },
  {
    "objectID": "posts/analisis-salario-arg/index.html#an√°lisis-visualizaci√≥n",
    "href": "posts/analisis-salario-arg/index.html#an√°lisis-visualizaci√≥n",
    "title": "An√°lisis de datos - Salarios por sector en ARG",
    "section": "An√°lisis + visualizaci√≥n",
    "text": "An√°lisis + visualizaci√≥n\nA continuaci√≥n vamos a realizar el mapa coropl√©tico de salarios de diciembre 2021 con la finalidad de responder a la pregunta:\n¬øCu√°les son los departamentos con mayor salario promedio? ü§î\n\n# primero revisamos que la clave para el join tiene el mismo tipo en ambos DF\ntypeof(data_deptos_ARG$codigo_departamento_indec)\n\n[1] \"character\"\n\ntypeof(salarios_dic_2021$codigo_departamento_indec)\n\n[1] \"double\"\n\ntypeof(data_deptos_ARG$codigo_departamento_indec)==typeof(salarios_dic_2021$codigo_departamento_indec)\n\n[1] FALSE\n\n# corregimos el tipo \ndata_deptos_ARG <- data_deptos_ARG %>% \n  mutate(codigo_departamento_indec = as.numeric(codigo_departamento_indec))\n\n# agregamos la informaci√≥n de salarios para cada depto\ndeptos_salario_dic_2021 <- data_deptos_ARG %>% \n  left_join(salarios_dic_2021)\n\n# graficamos\nggplot(deptos_salario_dic_2021) +\n  geom_sf(aes(fill = w_mean)) +\n  labs(fill = \"Salario promedio\") +\n  # usamos la paleta de colores viridis cuya principal\n  # caracter√≠stica es la accesibilidad\n  scale_fill_viridis_c(option = \"viridis\") +\n  theme_void() +\n  theme(\n    legend.text = element_text(size = 12),\n    legend.title = element_text(size = 13)\n  )\n\n\n\n\nComo se puede observar en el mapa, el salario promedio es mayor en el sur del pa√≠s (o la Patagonia Argentina).\nPero‚Ä¶ ¬øesta distribuci√≥n siempre fue as√≠? ü§î\nVeamos la distribuci√≥n del salario promedio pero para el 2014\n\nsalarios_dic_2014 <- salario_prom_depto %>% \n  filter(year(fecha)==2014) %>% \n  # filtramos los casos -99 y nos quedamos con el mes de diciembre\n  filter(w_mean > 0, fecha == \"2014-12-01\")\n\n# agregamos la informaci√≥n de salarios para cada depto\ndeptos_salario_dic_2014 <- data_deptos_ARG %>% \n  left_join(salarios_dic_2014)\n\n# graficamos\nggplot(deptos_salario_dic_2014) +\n  geom_sf(aes(fill = w_mean)) +\n  labs(fill = \"Salario promedio\") +\n  scale_fill_viridis_c(option = \"viridis\") +\n  theme_void() +\n  theme(\n    legend.text = element_text(size = 12),\n    legend.title = element_text(size = 13)\n  )\n\n\n\n\nPodemos observar que la distribuci√≥n es similar, observando un leve pero distinguible aumento en el salario promedio a nivel territorial en el centro y este del pa√≠s, adem√°s de un incremento en el rango de salarios m√≠nimo y m√°ximo.\nA continuaci√≥n vamos a ver la evoluci√≥n del promedio del salario en cada departamento. Para esto vamos a analizar los mismos puntos temporales de antes: diciembre del 2014 y diciembre del 2021.\n\n# preparamos los datos\ndata_salarios_2014_2021 <- salario_prom_depto %>% \n  filter(fecha == \"2014-12-01\" | fecha == \"2021-12-01\") %>% \n  mutate(anio = year(fecha)) %>% \n  select(codigo_departamento_indec, w_mean, anio) %>% \n  pivot_wider(names_from = anio, \n              values_from = w_mean, \n              names_prefix = \"anio_\") %>% \n  # filtramos departamentos que tienen valores -99 o nulos\n  filter(!is.na(codigo_departamento_indec)) %>% \n  filter(!is.na(anio_2014), anio_2014 > 0) %>% \n  filter(!is.na(anio_2021), anio_2021 > 0) %>% \n  # Calculamos el incremento en porcentaje\n  mutate(diff = (anio_2021 - anio_2014) / anio_2014 * 100)\n\n\n# agregamos la informaci√≥n de salarios para cada depto\ndeptos_salario_diff <- data_deptos_ARG %>% \n  left_join(data_salarios_2014_2021)\n\n# graficamos\nggplot(deptos_salario_diff) +\n  geom_sf(aes(fill = diff)) +\n  labs(fill = \"% aumento\") +\n  scale_fill_viridis_c(option = \"viridis\") +\n  theme_void() +\n  theme(\n    plot.title.position = \"plot\",\n    legend.title = element_text(size = 13),\n    legend.text = element_text(size = 12)\n    \n  )\n\n\n\n\nEste mapa muestra la evoluci√≥n en porcentaje del crecimiento de salario en cada departamento. Una posible lectura de este mapa es que el crecimiento del salario promedio se dio de forma semi uniforme con algunas excepciones.\nEn el mapa podemos ver que hay departamentos con un aumento del salario de hasta 13 veces y en otros de hasta 5 veces.\nPasemos a la siguiente pregunta‚Ä¶\n¬øCu√°les son los 5 sectores de actividad con salarios m√°s bajos? ü§î\nPara responder a esta pregunta vamos a utilizar los datos de salario promedio por sector y letra. Nos vamos a enfocar en el a√±o 2021 y vamos a comparar estos sectores con los 2 sectores de mayor salario del mismo a√±o.\n\n# limpiamos diccionario de letras\ndicc_letras <- dicc_letras %>% \n  select(letra, letra_desc) %>% \n  unique()\n\n# filtramos el a√±o a analizar\nsalario_prom_sector_2021 <- salario_prom_depto_letra %>% \n  filter(year(fecha)==2021) %>% \n  # cruzamos con el diccionario de letras\n  left_join(dicc_letras) %>% \n  # agrupamos por sector\n  group_by(letra_desc) %>% \n  # calculamos el salario promedio por sector (promedio del a√±o)\n  summarise(salario_promedio = mean(w_mean, na.rm = TRUE)) %>% \n  arrange(salario_promedio)\n\nlast_row_idx <- salario_prom_sector_2021 %>% \n  nrow()\n\n\n\n## Loading Google fonts (https://fonts.google.com/)\nfont_add_google(\"Roboto condensed\", \"robo\")\n\n## Automatically use showtext to render text\nshowtext_auto()\n\n# graficamos los 5 sectores de actividad con salarios m√°s bajos del 2021\nggplot(salario_prom_sector_2021 %>% slice(c(1:5,last_row_idx-1, last_row_idx)), \n       aes(x = fct_reorder(letra_desc, -salario_promedio), \n           y = salario_promedio)) +\n  geom_col(aes(fill = salario_promedio < 100000)) +\n  geom_text(aes(label = scales::dollar(salario_promedio, \n                                       accuracy = .01, \n                                       big.mark = \".\", \n                                       decimal.mark = \",\"),\n                hjust = ifelse(salario_promedio < 100000,-0.1,1.1),\n                color = salario_promedio < 100000),\n           fontface = \"bold\",\n           size=7) +\n  coord_flip(clip=\"off\") +\n  scale_color_manual(values = c(\"white\",\"black\")) +\n  scale_fill_manual(values = c(\"grey70\",\"#D4C7FF\")) +\n  guides(fill=\"none\",color=\"none\") +\n  labs(x = \"none\",\n       title = \"Los 5 sectores con salario promedio m√°s bajo en el 2021\",\n       subtitle = \"En comparaci√≥n a los 2 sectores con salario promedio m√°s altos del mismo a√±o\") +\n  theme_minimal(base_family = \"robo\", base_size = 20) +\n  theme(\n    axis.text.x = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    axis.text.y = element_text(face=\"bold\"),\n    plot.title.position = \"plot\"\n  )\n\n\n\n\nA partir de esto nos surge la siguiente pregunta‚Ä¶\n¬øEsto siempre fue as√≠? ü§î\nPara esto vamos a ver los 5 sectores con menor salario a lo largo del tiempo. En este caso vamos a hacer uso de la librer√≠a gganimate que nos permite extender ggplot agregando animaci√≥n a nuestras visualizaciones. Lo m√°s interesante es que basta con agregar 5 l√≠neas de c√≥digo a lo que ven√≠amos haciendo con ggplot y luego con la funci√≥n animate agregamos los par√°metros finales como por ejemplo la duraci√≥n del gif.\n\n# filtramos los sectores a analizar\nsalario_prom_sector_evol <- salario_prom_depto_letra %>% \n  group_by(fecha, letra) %>% \n  summarise(salario_promedio = mean(w_mean, na.rm=T)) %>% \n  mutate(Rank = rank(salario_promedio)) %>% \n  filter(Rank <= 5) %>% \n  arrange(fecha, Rank) %>% \n # cruzamos con el diccionario de letras\n  left_join(dicc_letras) %>% \n  mutate(Rank = as.factor(Rank))\n\n\n# graficamos\nanim <- ggplot(salario_prom_sector_evol) +\n  geom_col(aes(x = fct_reorder(Rank, salario_promedio), \n               y = salario_promedio, \n               fill = letra_desc, \n               group = letra_desc),\n           width = 0.7) +\n  geom_text(aes(x = fct_reorder(Rank, salario_promedio), \n                y = 0,\n                label = letra_desc, group = letra_desc), \n            hjust = 0,\n            size = 3,\n            family = \"robo\") +\n  scale_fill_brewer(palette = \"Set2\") +\n  coord_flip(clip=\"off\") +\n  guides(fill = \"none\") +\n  labs(y = \"Salario Promedio\") +\n  theme_minimal() +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.text.x = element_text(family = \"robo\"),\n        axis.title.x = element_text(family = \"robo\"),\n        plot.margin = unit(c(5,10,5,0), 'lines')) +\n  # a partir de ac√° hacemos uso de gganimate\n  ggtitle('Mostrando los 5 sectores con salario promedio m√°s bajo en: {closest_state}') +\n  transition_states(fecha, state_length = 0, transition_length = 2) +\n  enter_fly(x_loc = 0, y_loc = 0) +\n  exit_fly(x_loc = 0, y_loc = 0) + \n  ease_aes('quadratic-in-out') \n\nanimate(anim, width = 700, height = 500, \n        fps = 25, duration = 40, rewind = FALSE)\n\n\n\n\nEn este gr√°fico podemos observar que de los 5 sectores con menor salario, 4 se mantienen hist√≥ricamente (entre ellos el sector de actividades relacionadas a la ense√±anza).\nVeamos c√≥mo evolucionaron los salarios en cada sector usando otra alternativa. Para esto voy a hacer una de mis visualizaciones favoritas‚Ä¶ una ‚Äúdumbbell chart‚Äù (a√∫n no encuentro una traducci√≥n que me convenza‚Ä¶ ¬øgr√°fico de mancuernas? ¬øde pesas?). El objetivo de esta visualizaci√≥n es poder comparar el crecimiento del salario promedio en cada sector desde el 2018 al 2021.\n\n# preparamos los datos\nsalario_sector_evol <- salario_prom_depto_letra %>% \n  left_join(dicc_letras) %>% \n  mutate(anio = year(fecha)) %>% \n  filter(anio %in% c(2018,2021)) %>% \n  filter(!is.na(letra_desc)) %>% \n  group_by(letra_desc, anio) %>% \n  summarise(salario_promedio = mean(w_mean, na.rm = TRUE)) %>% \n  # usamos la funci√≥n str_wrap para \"achicar\" un poco el ancho \n  # de los textos\n  mutate(letra_2 = str_wrap(letra_desc,50),\n         anio = as.factor(anio),\n         salario_promedio_K = salario_promedio / 1000)\n\n\n# para las lineas del salario promedio del a√±o\npromedio_2018_2021 <- salario_prom_depto_letra %>% \n  left_join(dicc_letras) %>% \n  mutate(anio = year(fecha)) %>% \n  filter(anio %in% c(2018,2021)) %>% \n  filter(!is.na(letra_desc)) %>% \n  group_by(anio) %>% \n  summarise(salario_promedio = mean(w_mean, na.rm = TRUE)) %>% \n  mutate(salario_promedio_K = salario_promedio / 1000) %>% \n  # generamos un vector con ambos valores\n  pull(salario_promedio_K)\n\n\n# para la dumbbell chart hacemos uso de dos geometr√≠as: \n# geom_line y geom_point\nggplot(salario_sector_evol, aes(x = salario_promedio_K, \n                                y = reorder(letra_2, salario_promedio_K),\n                                color = anio)) +\n  geom_line(aes(group = letra_2), size = 2, color = \"grey70\") +\n  # graficamos l√≠neas verticales para el promedio anual\n  geom_vline(xintercept = promedio_2018_2021, \n             alpha = .3, linetype = \"dotdash\", size = 1) +\n  geom_point(size = 5) +\n  geom_text(aes(label = scales::dollar(salario_promedio_K, suffix = \"K\", accuracy = 1),\n                hjust = ifelse(anio==2018,1.3,-0.3)),\n            alpha = .7,\n            size = 7,\n            show.legend = FALSE) +\n  scale_x_continuous(limits = c(0,220), expand = c(.2,0)) +\n  scale_color_manual(values = c(\"#0E419E\",\"#EB5A49\")) +\n  labs(x = NULL, y = NULL, color = \"A√±o\") +\n  theme_minimal(base_family = \"robo\", base_size = 20) +\n  theme(\n    legend.position = \"top\",\n    axis.text.x = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    axis.text.y = element_text()\n  )\n\n\n\n\nDe la visualizaci√≥n podemos ver que el crecimiento fue mayor en sectores que ya contaban con salarios altos, entre los cuales podemos listar al sector de miner√≠a, de suministro de servicios, de intermediaci√≥n financiera y de inform√°tica y comunicaciones."
  },
  {
    "objectID": "posts/mapas-interactivos/index.html",
    "href": "posts/mapas-interactivos/index.html",
    "title": "Generar mapas interactivos",
    "section": "",
    "text": "Este post se basa en los datos introducidos en este otro post. El objetivo ser√° generar un mapa interactivo con la librer√≠a plotly.\nVamos con la configuraci√≥n inicial.\n\n# salario promedio depto (total empresas)\nsalario_prom_depto <- read_csv(\"https://cdn.produccion.gob.ar/cdn-cep/datos-por-departamento/salarios/w_mean_depto_tot_emp.csv\")\n\n# diccionario deptos\ndicc_deptos <- read_csv(\"https://cdn.produccion.gob.ar/cdn-cep/datos-por-departamento/diccionario_cod_depto.csv\")\n\ndata_deptos_ARG <- read_sf(\"data/departamentos_arg.geojson\")\n\n\n# vamos a observar √∫nicamente el a√±o 2021\nsalarios_2021 <- salario_prom_depto %>% \n  # year es una funci√≥n de lubridate\n  filter(year(fecha)==2021)\n\n\n# filtramos los casos -99 y nos quedamos con el mes de diciembre\nsalarios_dic_2021 <- salarios_2021 %>% \n  filter(w_mean > 0, fecha == \"2021-12-01\")\n\n\ncaba_fix <- data_deptos_ARG %>%\n  select(departamen, provincia, geometry, codigo_departamento_indec) %>%\n  group_by(provincia) %>%\n  filter(provincia == \"Ciudad Aut√≥noma de Buenos Aires\") %>%\n  summarize(geometry = st_union(geometry),\n            codigo_departamento_indec = \"02000\") %>%\n  ungroup() %>% \n  mutate(geometry = st_combine(geometry))\n\nsin_CABA <- filter(data_deptos_ARG, provincia != \"Ciudad Aut√≥noma de Buenos Aires\")\n\n# el \"nuevo\" dataset pero con id 2000 para CABA\ndata_deptos_ARG <- sin_CABA %>%\n  bind_rows(caba_fix) \n\n\n# corregimos el tipo \ndata_deptos_ARG <- data_deptos_ARG %>% \n  mutate(codigo_departamento_indec = as.numeric(codigo_departamento_indec))\n\n# agregamos la informaci√≥n de salarios para cada depto\ndeptos_salario_dic_2021 <- data_deptos_ARG %>% \n  left_join(salarios_dic_2021)\n\nLa visualizaci√≥n m√°s simple que podemos obtener de la distribuci√≥n de salarios promedios es la siguiente:\n\n# graficamos\nggplot(deptos_salario_dic_2021) +\n  geom_sf(aes(fill = w_mean)) +\n  labs(fill = \"Salario promedio\") +\n  # usamos la paleta de colores viridis cuya principal\n  # caracter√≠stica es la accesibilidad\n  scale_fill_viridis_c(option = \"viridis\") +\n  theme_void() +\n  theme(\n    legend.text = element_text(size = 12),\n    legend.title = element_text(size = 13)\n  )\n\n\n\n\nComo se puede observar en la leyenda, el salario promedio no muestra el punto separador de miles. Por otra parte podriamos detallar el tipo de unidad que estamos trabajando, es decir, el signo peso ($). Nuestra tarea ser√° mejorar estos aspectos, para lo cual haremos uso de una libreria que fu√© pensada para trabajar con el reescalado de datos.\nPero‚Ä¶ ¬øQu√© significa esto del ‚Äúreescalado‚Äù de datos?.\n\n\n\n\n\n\nNota\n\n\n\nEn el post que introduce los datos utilizados y en donde realizamos un an√°lisis exploratorio de los mismos, no escrib√≠ sobre la utilidad de la libreria scales. A continuaci√≥n voy a desarrollar sobre el uso de esta librer√≠a, para un caso puntual.\n\n\nPuede ser que estemos trabajando con ciertos valores que est√©n en una determinada escala. Tomemos como ejemplo las proporciones. Supongamos que luego de nuestro an√°lisis hemos obtenido una tabla como la siguiente:\n\ntabla <- data.frame(\n  tipo = c(\"T1\",\"T2\",\"T3\"),\n  n = c(200,100,100),\n  pct = c(.5,.25,.25)\n)\n\ntabla\n\n  tipo   n  pct\n1   T1 200 0.50\n2   T2 100 0.25\n3   T3 100 0.25\n\n\nEn la cual hemos calculado las proporciones con respecto al total (400) para cada tipo.\n‚ÄúDel total de casos (400), 200 son de tipo T1, 100 de tipo T2 y 100 de tipo T3‚Äù.\nDicho de otra forma, el 50% de casos son de tipo T1, el 25% de tipo T2 y el 25% restante de tipo T3. Ahora bien, al momento de graficar estos datos, podr√≠amos hacer algo como esto:\n\ntabla %>% \n  ggplot(aes(x = tipo, y = pct)) +\n  geom_col()\n\n\n\n\nPero si usamos estos valores, al lector le ser√° dificil interpretar que nuestro objetivo era mostrar porcentajes en el eje Y. En lugar de 0.5, lo ideal ser√≠a mostrar 50%. Lo mismo sucede con nuestro ejemplo principal de este post, es decir, los valores de salario promedio. No es lo mismo mostrar 350000 que $350.000 Al lector le ser√° m√°s f√°cil identificar la unidad con que se est√° trabajando y el separador de miles. Recordemos que nuestro objetivo ser√° que la visualizaci√≥n de datos no confunda, sino que debe facilitar la comprensi√≥n.\nLuego de haber hecho esta breve y simple justificaci√≥n de la importancia del reescalado, veamos c√≥mo se usa la libreria scales para transformar escalas y adem√°s ‚Äúmostrarlas‚Äù en nuestras gr√°ficas. Es tan sencillo como agregar lo siguiente:\n\ntabla %>% \n  ggplot(aes(x = tipo, y = pct)) +\n  geom_col() +\n  # modificamos la escala de Y indicando que\n  # las etiquetas sean valores porcentuales\n  scale_y_continuous(labels = scales::label_percent())\n\n\n\n\nAhora corrijamos nuestra leyenda del mapa haciendo uso de la funci√≥n de label_dollar() de scales.\n\n# graficamos\nggplot(deptos_salario_dic_2021) +\n  geom_sf(aes(fill = w_mean)) +\n  labs(fill = \"Salario promedio\") +\n  # usamos la paleta de colores viridis cuya principal\n  # caracter√≠stica es la accesibilidad\n  # adem√°s, ahora modificamos las etiquetas\n  scale_fill_viridis_c(option = \"viridis\",\n                       labels = scales::label_dollar()) +\n  theme_void() +\n  theme(\n    legend.text = element_text(size = 12),\n    legend.title = element_text(size = 13)\n  )\n\n\n\n\nPerfecto! pero hay un detalle‚Ä¶ nosotros separamos miles usando punto y no coma. Por defecto la funci√≥n usa la coma para separar miles. Vamos a hacer unos ajustes a la funci√≥n para modificar este comportamiento.\n\n# graficamos\nggplot(deptos_salario_dic_2021) +\n  geom_sf(aes(fill = w_mean)) +\n  labs(fill = \"Salario promedio\") +\n  # usamos la paleta de colores viridis cuya principal\n  # caracter√≠stica es la accesibilidad\n  # adem√°s, ahora modificamos las etiquetas\n  # y modificamos el comportamiento por defecto de\n  # la funci√≥n indicando separadores de miles\n  # y decimales\n  scale_fill_viridis_c(option = \"viridis\",\n                       labels = scales::label_dollar(\n                         big.mark = \".\",\n                         decimal.mark = \",\"\n                       )) +\n  theme_void() +\n  theme(\n    legend.text = element_text(size = 12),\n    legend.title = element_text(size = 13)\n  )\n\n\n\n\n\nAgregando interactividad al mapa\nBien, volvamos a nuestro objetivo inicial‚Ä¶ generar un mapa interactivo. Vamos a ver que generar un mapa de este tipo resulta demasiado sencillo. Y es que simplemente, a nuestro flujo de trabajo inicial, el que utilizamos para generar el mapa est√°tico, debemos sumarle la funci√≥n ggplotly() y listo! tenemos un mapa interactivo. A esta funci√≥n le pasamos el par√°metro tooltip, el cual indica qu√© aesthetic mostrar cu√°ndo pasemos el puntero por encima de las regiones del mapa. En nuestro caso vamos a mostrar un texto que combina el dato del nombre de la provincia, el departamento y el salario promedio.\n\netiquetadora <- scales::label_dollar(\n                         big.mark = \".\",\n                         decimal.mark = \",\"\n                       )\n\ndeptos_salario_dic_2021 <- deptos_salario_dic_2021 %>% \n  mutate(\n    salario = etiquetadora(w_mean),\n    tooltip = paste0(provincia,\"\\n\",departamen,\"\\n\",salario))\n\n# graficamos\n# lo de TRUCO sale del siguiente issue\n# https://github.com/plotly/plotly.R/issues/1641#issuecomment-550477069\nmapa_plot <- ggplot(deptos_salario_dic_2021, \n                    aes(fill = w_mean, \n                        text = tooltip, \n                        color = tooltip)) +\n  geom_sf() +\n  labs(fill = \"Salario promedio\") +\n  # usamos la paleta de colores viridis cuya principal\n  # caracter√≠stica es la accesibilidad\n  # adem√°s, ahora modificamos las etiquetas\n  # y modificamos el comportamiento por defecto de\n  # la funci√≥n indicando separadores de miles\n  # y decimales\n  scale_fill_viridis_c(option = \"viridis\",\n                       labels = scales::label_dollar(\n                         big.mark = \".\",\n                         decimal.mark = \",\"\n                       )) +\n  guides(color = \"none\") +\n  theme_void() +\n  theme(\n    legend.text = element_text(size = 12),\n    legend.title = element_text(size = 13)\n  )\n\n\n# la \"magia\" de ggplotly üßô‚Äç‚ôÇÔ∏è\ngg_2 <- ggplotly(\n  mapa_plot,\n  tooltip = \"text\"\n) \n\ngg_2 %>% \n  style(\n    hoveron = \"fill\",\n    # override the color mapping\n    line.color = toRGB(\"gray40\"),\n    # don't apply these style rules to the first trace, which is the background graticule/grid\n    traces = seq.int(2, length(gg_2$x$data))\n  ) %>% \n  hide_legend()\n\n\n\n\n\nUn dato de inter√©s, es el uso de style, que nos permite agregar algunas propiedades visuales. En este caso usaremos la propiedad hoveron.\nEsto es para evitar cierto comportamiento extra√±o al pasar el puntero por encima de un departamento. Te propongo visualizar tal comportamiento quitando la funci√≥n style (y todo lo que sigue, que son ‚Äúhacks‚Äù para corregir el texto del tooltip en este tipo de mapas)."
  }
]